on:
  push:
    tags:
      - "v*"

name: Release Packaging

jobs:
  release:
    name: Release Packaging
    env:
      PROJECT_NAME_UNDERSCORE: rust_ci_github_actions_workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Security audit
        uses: actions-rs/audit-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install cargo-deb crate
        run: if [ ! -f ~/.cargo/bin/cargo-deb ]; then cargo install cargo-deb; fi
      - name: Release Build
        uses: actions-rs/cargo@v1
        with:
          command: deb
      - name: define version
        id: release-version
        run: |
          VERSION=$(cat Cargo.toml | grep version | head -1 | awk '{print $3}' | tr -d '"')
          echo "::set-output name=version::$VERSION"
      - name: Create archive
        env:
          PACKAGE_VERSION: $(cat Cargo.toml | grep version | head -1 | awk '{print $3}' | tr -d '"')
        run: tar cfvz target/release/env-setter_${{ steps.release-version.outputs.version }}.tar.gz target/release/env-setter
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload debian package
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/debian/env-setter_${{ steps.release-version.outputs.version }}.deb
          asset_name: env-setter_${{ steps.release-version.outputs.version }}.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload package archive
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/env-setter_${{ steps.release-version.outputs.version }}.tar.gz
          asset_name: env-setter_${{ steps.release-version.outputs.version }}.tar.gz
          asset_content_type: application/gzip
